//
//   RegisterView.swift-
//  BookTrackerApp
//
//  Created by Tamo Marvin Achiri   on 10/8/25.
//

import Foundation
import SwiftUI

struct RegisterView: View {
    @EnvironmentObject var authManager: AuthManager
    @Environment(\.presentationMode) var presentationMode
    
    @State private var email = ""
    @State private var password = ""
    @State private var isPasswordVisible = false
    @State private var registrationMessage: String?
    
    var body: some View {
        VStack(spacing: 0) {
            // Header
            HStack {
                Button(action: {
                    presentationMode.wrappedValue.dismiss()
                }) {
                    Image(systemName: "chevron.left")
                        .foregroundColor(.purple)
                        .font(.title2)
                }
                
                Spacer()
                
                Text("Waspito")
                    .font(.largeTitle)
                    .fontWeight(.bold)
                
                Spacer()
                
                HStack(spacing: 16) {
                    Text("EN")
                        .fontWeight(.semibold)
                        .foregroundColor(.purple)
                    
                    Text("FR")
                        .fontWeight(.semibold)
                        .foregroundColor(.gray)
                }
            }
            .padding(.horizontal, 24)
            .padding(.top, 20)
            .padding(.bottom, 30)
            
            // Subtitle
            Text("Create a new account to get started with Waspito.")
                .font(.body)
                .multilineTextAlignment(.center)
                .foregroundColor(.gray)
                .padding(.horizontal, 24)
                .padding(.bottom, 40)
            
            // Email field
            VStack(alignment: .leading, spacing: 8) {
                Text("Email")
                    .font(.caption)
                    .foregroundColor(.gray)
                
                TextField("Enter your email", text: $email)
                    .frame(height: 50)
                    .padding(.leading, 16)
                    .keyboardType(.emailAddress)
                    .autocapitalization(.none)
                    .background(
                        RoundedRectangle(cornerRadius: 8)
                            .stroke(Color.gray.opacity(0.3), lineWidth: 1)
                    )
            }
            .padding(.horizontal, 24)
            .padding(.bottom, 20)
            
            // Password field
            VStack(alignment: .leading, spacing: 8) {
                Text("Password")
                    .font(.caption)
                    .foregroundColor(.gray)
                
                HStack {
                    if isPasswordVisible {
                        TextField("Enter your password", text: $password)
                    } else {
                        SecureField("Enter your password", text: $password)
                    }
                    
                    Button {
                        isPasswordVisible.toggle()
                    } label: {
                        Image(systemName: isPasswordVisible ? "eye.slash" : "eye")
                            .foregroundColor(.gray)
                    }
                    .padding(.trailing, 16)
                }
                .frame(height: 50)
                .padding(.leading, 16)
                .background(
                    RoundedRectangle(cornerRadius: 8)
                        .stroke(Color.gray.opacity(0.3), lineWidth: 1)
                )
            }
            .padding(.horizontal, 24)
            .padding(.bottom, 30)
            
            // Register button
            Button {
                authManager.register(email: email, password: password)
                registrationMessage = "Registration successful! Logged in as \(email)"
            } label: {
                Text("REGISTER")
                    .fontWeight(.semibold)
                    .foregroundColor(.white)
            }
            .frame(height: 50)
            .frame(maxWidth: .infinity)
            .background(Color.purple)
            .cornerRadius(8)
            .padding(.horizontal, 24)
            
            if let registrationMessage = registrationMessage {
                Text(registrationMessage)
                    .foregroundColor(.green)
                    .multilineTextAlignment(.center)
                    .padding(.top, 10)
                    .padding(.horizontal, 24)
            }
            
            if let errorMessage = authManager.errorMessage {
                Text(errorMessage)
                    .foregroundColor(.red)
                    .multilineTextAlignment(.center)
                    .padding(.top, 10)
                    .padding(.horizontal, 24)
            }
            
            Spacer()
            
            // Already have account section
            VStack(spacing: 16) {
                Divider()
                    .padding(.vertical, 20)
                
                Text("Already have an account?")
                    .font(.body)
                    .foregroundColor(.gray)
                
                Button {
                    presentationMode.wrappedValue.dismiss()
                } label: {
                    Text("SIGN IN")
                        .fontWeight(.semibold)
                        .foregroundColor(.purple)
                        .frame(height: 50)
                        .frame(maxWidth: .infinity)
                        .background(Color.purple.opacity(0.1))
                        .cornerRadius(8)
                }
                .padding(.horizontal, 24)
            }
            .padding(.bottom, 40)
        }
        .padding(.top, 20)
        .navigationBarHidden(true)
    }
}

struct RegisterView_Previews: PreviewProvider {
    static var previews: some View {
        RegisterView().environmentObject(AuthManager())
    }
}
